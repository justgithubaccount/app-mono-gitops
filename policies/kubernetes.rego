package kubernetes

import rego.v1

# üõ°Ô∏è 1. –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å —Ä–µ—Å—É—Ä—Å—ã
deny contains msg if {
  input.kind == "Deployment"
  container := input.spec.template.spec.containers[_]
  not container.resources.limits.memory
  msg := sprintf("Container %s missing memory limit", [container.name])
}

deny contains msg if {
  input.kind == "Deployment"  
  container := input.spec.template.spec.containers[_]
  not container.resources.limits.cpu
  msg := sprintf("Container %s missing CPU limit", [container.name])
}

# üî¨ 2. –î–æ–ª–∂–Ω—ã –±—ã—Ç—å probes
deny contains msg if {
  input.kind == "Deployment"
  container := input.spec.template.spec.containers[_]
  not container.livenessProbe
  msg := sprintf("Container %s missing livenessProbe", [container.name])
}

deny contains msg if {
  input.kind == "Deployment"
  container := input.spec.template.spec.containers[_] 
  not container.readinessProbe
  msg := sprintf("Container %s missing readinessProbe", [container.name])
}

# üìõ 3. Namespace –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω
deny contains msg if {
  not input.metadata.namespace
  msg := "Resource is missing namespace"
}

# üîê 4. –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –Ω–µ –æ—Ç root
deny contains msg if {
  input.kind == "Deployment"
  not input.spec.template.spec.securityContext.runAsNonRoot
  msg := "Deployment must set runAsNonRoot: true"
}

# üì¶ 5. –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è LLM ‚Äî –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–¥–∞–Ω–∞ –º–æ–¥–µ–ª—å
deny contains msg if {
  input.kind == "Deployment"
  container := input.spec.template.spec.containers[_]
  input.metadata.labels["app.kubernetes.io/name"] == "chat-api"
  not input.spec.template.metadata.annotations["openrouter.model"]
  msg := "chat-api is missing openrouter.model annotation"
}

# üî≠ 6. OTEL –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã
deny contains msg if {
  input.kind == "Deployment"
  container := input.spec.template.spec.containers[_]
  not has_otel_endpoint(container)
  msg := "OpenTelemetry OTLP endpoint is missing"
}

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ OTEL endpoint
has_otel_endpoint(container) if {
  some env in container.env
  env.name == "OTEL_EXPORTER_OTLP_ENDPOINT"
}